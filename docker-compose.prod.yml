# Docker Compose for Production with HTTPS
version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: operatorskillshub_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/ssl/certs
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - operatorskillshub_network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: operatorskillshub_frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://operatorskillshub.com/api
      - NEXT_PUBLIC_APP_URL=https://operatorskillshub.com
    restart: unless-stopped
    networks:
      - operatorskillshub_network
    depends_on:
      - backend

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: operatorskillshub_backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY}
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - ALLOWED_ORIGINS=https://operatorskillshub.com,https://www.operatorskillshub.com
      - TRUSTED_HOSTS=operatorskillshub.com,www.operatorskillshub.com
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DEBUG=false
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - operatorskillshub_network

  db:
    image: postgres:15-alpine
    container_name: operatorskillshub_db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - operatorskillshub_network
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    container_name: operatorskillshub_redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - operatorskillshub_network
    ports:
      - "6379:6379"

  # SSL Certificate Renewal
  certbot:
    image: certbot/certbot
    container_name: operatorskillshub_certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/html:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email ${SSL_EMAIL} --agree-tos --no-eff-email -d operatorskillshub.com -d www.operatorskillshub.com
    depends_on:
      - nginx
    networks:
      - operatorskillshub_network

  # Database Backup
  backup:
    image: postgres:15-alpine
    container_name: operatorskillshub_backup
    environment:
      - PGPASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./backups:/backups
      - ./scripts/backup.sh:/backup.sh
    command: /bin/sh -c "chmod +x /backup.sh && /backup.sh"
    depends_on:
      - db
    restart: "no"
    networks:
      - operatorskillshub_network

  # Monitoring
  monitoring:
    image: prom/prometheus:latest
    container_name: operatorskillshub_monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - operatorskillshub_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local
  prometheus_data:
    driver: local

networks:
  operatorskillshub_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
